[{"/home/avinash/Downloads/Enablex/src/index.js":"1","/home/avinash/Downloads/Enablex/src/serviceWorker.js":"2","/home/avinash/Downloads/Enablex/src/App.js":"3","/home/avinash/Downloads/Enablex/src/pages/Room.js":"4","/home/avinash/Downloads/Enablex/src/pages/Login.js":"5","/home/avinash/Downloads/Enablex/src/service/api.js":"6","/home/avinash/Downloads/Enablex/src/components/LoginHeader.js":"7"},{"size":546,"mtime":1605790648000,"results":"8","hashOfConfig":"9"},{"size":5086,"mtime":1605790648000,"results":"10","hashOfConfig":"9"},{"size":455,"mtime":1610356498000,"results":"11","hashOfConfig":"9"},{"size":14132,"mtime":1615598352580,"results":"12","hashOfConfig":"9"},{"size":8395,"mtime":1610363292000,"results":"13","hashOfConfig":"9"},{"size":903,"mtime":1615597151948,"results":"14","hashOfConfig":"9"},{"size":895,"mtime":1609840400000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8iez2h",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/home/avinash/Downloads/Enablex/src/index.js",[],"/home/avinash/Downloads/Enablex/src/serviceWorker.js",[],"/home/avinash/Downloads/Enablex/src/App.js",[],"/home/avinash/Downloads/Enablex/src/pages/Room.js",["33","34","35","36","37","38","39","40","41","42","43"],"import React, { useState, useEffect } from 'react';\nimport {\n    useParams\n} from \"react-router-dom\";\nimport './room.css'\nlet EnxRtc = window.EnxRtc;\nlet EnxWb = window.EnxWb;\n\nexport default function Room(props) {\n    let player_options = {\n    \"player\": {\n        \"autoplay\": \"\",     // Enum: autoplay (default)\n        \"name\": \"\",         // Use stream.attributes.name preferably\n        \"nameDisplayMode\": \"\",  // Enum: auto (default), on, off\n        \"frameFitMode\": \"\", // Enum: bestFit (default), coverMax\n        \"skin\":\"default\",   // Enum: default (default)\n        \"class\": \"\"       // Custom CSS Class Name\n    },\n    toolbar: {\n        'displayMode': false,\n    }\n};\n    let canvasStarted = false;\n    let presentationStarted = false;\n    let { token } = useParams();\n    let ATList = [];\n    let audio_muted = false;\n    let video_muted = false;\n    let video_type = \"SD\";\n\n    let room = null;\n    let SubscribedStreamMap = new Map();\n    let localStream,\n        remote_view,\n        sAMute = true,\n        sVMute = true,\n        rAmute = true,\n        rVMute = true;\n\n    let optionsLocal;\n    let remoteOptions;\n    let isModerator;\n    let VideoSize = {\n        'HD': [320, 180, 1280, 720],\n        'SD': [640, 480, 640, 480],\n        'LD': [80, 45, 640, 360]\n    };\n    let config = {\n        video: true,\n        audio: true,\n        data: true,\n        videoSize: VideoSize[video_type],\n    };\n\n    optionsLocal = {\n        player: {\n            height: \"150px\",\n            width: \"150px\",\n            minHeight: \"150px\",\n            minWidth: \"150px\",\n        },\n        toolbar: {\n            displayMode: false,\n        },\n        resizer: false,\n    };\n    remoteOptions = {\n        player: {\n            height: \"100%\",\n            width: \"100%\",\n        },\n        resizer: false,\n        toolbar: {\n            displayMode: false,\n        },\n    };\n\n    useEffect(() => {\n        joinRoom()\n    }, []);\n\n\n    let enableMuteButton = (muteUnmuteBtn) => {\n        muteUnmuteBtn.removeAttribute(\"disabled\");\n        muteUnmuteBtn.style.cursor = \"pointer\";\n        muteUnmuteBtn.style.pointerEvents = \"auto\";\n    }\n\n\n    let joinRoom = () => {\n        console.log('joining the room...');\n        document.querySelector(\"#local_view\").classList.add(\"local_class_peep\");\n        document.querySelector(\"#remote_view\").classList.add(\"remote_class_peep\");\n        let muteUnmuteBtn = document.querySelector(\"#self_vMute\");\n        EnxRtc.Logger.setLogLevel(0);\n        localStream = EnxRtc.joinRoom(token, config, function (success, error) {\n\n            if (error && error == null) {\n                document.querySelector(\".error_div\").innerHTML = \"Room connection error.\" + error.message;\n            }\n            // if room connects successfully\n            if (success && success !== null) {\n\n                //play local view\n                localStream.play(\"self-view\", optionsLocal);\n\n                // assigning room object to a variable\n                room = success.room;\n                // check if the user joined as moderator or participant\n                isModerator = room.me.role === \"moderator\" ? true : false;\n                var ownId = success.publishId;\n                for (var i = 0; i < success.streams.length; i++) {\n                    room.subscribe(success.streams[i]);\n                }\n                // Active talkers handling\n                room.addEventListener(\"active-talkers-updated\", function (event) {\n                    console.log(\"Active Talker List :- \" + JSON.stringify(event));\n                    var video_player_len = document.querySelector(\"#call_div\").childNodes;\n\n                    ATList = event.message.activeList;\n\n                    if (\n                        event.message &&\n                        event.message !== null &&\n                        event.message.activeList &&\n                        event.message.activeList !== null\n                    ) {\n                        if (ATList.length === 0) {\n                            document.querySelector(\"#call_div\").innerHTML = \"\";\n                            document.querySelector(\".remote-name\").innerText = \"\";\n                        }\n                        if (SubscribedStreamMap.size > 0) {\n\n                            if (video_player_len.length >= 1) {\n                                return;\n                            } else {\n                                for (var stream in room.remoteStreams.getAll()) {\n                                    var st = room.remoteStreams.getAll()[stream];\n                                    for (var j = 0; j < ATList.length; j++) {\n                                        if (ATList[j].streamId === st.getID()) {\n                                            remote_view = st;\n                                            document.querySelector(\".self-name\").innerHTML = room.me.name;\n                                            st.play(\"call_div\", remoteOptions);\n                                            document.querySelector(\".remote-name\").innerHTML = ATList[j].name;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                });\n\n                // room recording start  notification\n                room.addEventListener(\"room-record-on\", function () {\n                    document.querySelector(\"#rec_notification\").style.display = 'block';\n                });\n                // room recording stop  notification\n                room.addEventListener(\"room-record-off\", function () {\n                    document.querySelector(\"#rec_notification\").style.display = 'none';\n                });\n\n                room.addEventListener(\"stream-subscribed\", function (streamEvent) {\n                    if (streamEvent.stream.getID() !== ownId) {\n                        SubscribedStreamMap.set(\n                            streamEvent.stream.getID(),\n                            streamEvent.stream\n                        );\n                    }\n                });\n\n\n                // user disconnection notification\n                room.addEventListener(\"user-disconnected\", function (streamEvent) {\n                    document.querySelector(\"#call_div\").innerHTML = \"\";\n                    document.querySelector(\".remote-name\").innerText = \"\";\n                });\n                // room disconnected notification\n                room.addEventListener(\"room-disconnected\", function (streamEvent) {\n                    window.location.href = \"/\";\n                });\n            }\n        });\n\t\n\t//\n\tdocument.querySelector(\"#self_aMute\").addEventListener('click', function (e) {\n            if (audio_muted) {\n\t\tvar wb = new EnxWb({\n                        canvasId: 'wb',\n                        initialWidth: 1000,\n                        initialHeight: 500,\n                        scheme : 'default',\n                    });\n                    wb.create(room);\n                    wb.startCollaboration();\n                   room.addEventListener(\"user-connected\",function(event){\n                       var clientId = event.clientId;\n                       wb.shareWith(clientId);\n                   })\n                   var i =0;\n                   room.addEventListener(\"stream-subscribed\", function (res) {\n                       console.log(\"stream_subscribed\",i++);\n                       // document.getElementById(\"notifications\").innerHTML = JSON.stringify(res, undefined, 4);\n                   })\n                   room.addEventListener(\"canvas-started\",function(data){\n                      if(data.message.clientId != room.me.clientId)\n                      {\n                        canvasStarted = true;\n                        presentationStarted = true;\n                        var stream_id = data.message.streamId;\n                        var st = room.remoteStreams.get(stream_id);\n                        st.play(\"canvasStreamPlayer\",player_options);\n                        document.querySelector(\"#canvasStreamPlayer\").style.border = \"1px solid red\";\n                      }\n                   });\n                \n            } else {\n                \n            }\n        });\n\t\n                    room.addEventListener(\"canvas-stopped\",function(data){\n                        canvasStarted = false;\n                        presentationStarted = false;\n                        document.querySelector(\"#canvasStreamPlayer\").innerHTML = \"\";\n                        document.querySelector(\"#canvasStreamPlayer\").style.border = \"none\";\n                    });\n\t//\n\n\n\n\n\n\n        // self stream audio mute/unmute  function\n        document.querySelector(\"#self_aMute\").addEventListener('click', function (e) {\n            if (audio_muted) {\n                if (room.mute) {\n                    console.log(\"Your audio is muted by moderator\");\n                } else {\n                    localStream.unmuteAudio(function (arg) {\n                        document.querySelector(\"#self_aMute\").classList.remove(\"fa-microphone-slash\");\n                        document.querySelector(\"#self_aMute\").classList.add(\"fa-microphone\");\n                        audio_muted = false;\n                    });\n                }\n            } else {\n                localStream.muteAudio(function (arg) {\n                    document.querySelector(\"#self_aMute\").classList.remove(\"fa-microphone\");\n                    document.querySelector(\"#self_aMute\").classList.add(\"fa-microphone-slash\");\n                    audio_muted = true;\n                });\n            }\n        });\n\n        document.querySelector(\"#disconnect_call\").addEventListener(\"click\", function () {\n            room.disconnect();\n        });\n\n        document.querySelector('#mute_video').addEventListener('click', function () {\n            muteUnmuteBtn.style.cursor = \"wait\";\n            muteUnmuteBtn.style.pointerEvents = \"none\";\n            muteUnmuteBtn.disabled = true;\n            muteUnmuteBtn.setAttribute(\"disabled\", \"disabled\");\n\n            if (video_muted) {\n                localStream.unmuteVideo(function (res) {\n                    if (res.result === 0) {\n                        document.querySelector(\"#self_vMute\").classList.remove(\"fa-video-slash\");\n                        document.querySelector(\"#self_vMute\").classList.add(\"fa-video\");\n                        video_muted = false;\n                        enableMuteButton(muteUnmuteBtn);\n                    } else if (res.result === 1140) {\n                        console.error(res.error);\n                        enableMuteButton(muteUnmuteBtn);\n                    }\n                });\n            } else {\n                localStream.muteVideo(function (res) {\n                    if (res.result === 0) {\n                        document.querySelector(\"#self_vMute\").classList.remove(\"fa-video\");\n                        document.querySelector(\"#self_vMute\").classList.add(\"fa-video-slash\");\n                        video_muted = true;\n                        enableMuteButton(muteUnmuteBtn);\n                    } else if (res.result === 1140) {\n                        enableMuteButton(muteUnmuteBtn);\n                    }\n                });\n            }\n        });\n    }\n\n\n\n\n\n    return (\n        <div>\n            <div className=\"layout\">\n                <div id=\"overlay\" style={{ 'display': 'none' }}>\n                    <div className=\"loader\" style={{ \"width\": \"50px\" }}>\n                        <img src=\"./img/loading.gif\" alt=\"\" />\n                    </div>\n                </div>\n\n                <div className=\"container\" >\n\t\t\t<div className=\"\">\n        <div className=\"col-md-9\">\n            <div id=\"main-container\" className=\"enx-layout-container\">\n                <canvas id=\"wb\"></canvas>\n            </div>\n\n        </div>\n        <div className=\"col-md-3\">\n            <div id=\"canvasStreamPlayer\"></div>\n        </div>\n    </div>\n                    <div className=\"row p-0 m-0\" id=\"call_container_div\">\n\n                        <div className=\"local_class_peep\" id=\"local_view\">\n                            <div id=\"self-view\"></div>\n                            <div className=\"self-name\">Local User</div>\n                        </div>\n\n                        <div className=\"remote_class_peep\" id=\"remote_view\">\n                            <div id=\"call_div\"></div>\n                            <div id=\"show_stream_div\"></div>\n                            <div className=\"remote-name\">Remote User</div>\n                        </div>\n\n                        <div className=\"toolbar-buttons\">\n                            <div className=\"tools\">\n                                <div className=\"mute-icon\" id=\"mute_audio\" title=\"Mute/Unmute Audio\">\n                                    <i className=\"fa fa-microphone\" id=\"self_aMute\"></i>\n                                </div>\n                                <div className=\"video-mute-icon\" id=\"mute_video\" title=\"Mute/Unmute Video\">\n                                    <i className=\"fa fa-video\" id=\"self_vMute\"></i>\n                                </div>\n                                {/* <div className=\"video-mute-icon\" id=\"share_screen_btn\" title=\"Start Share\">\n                                    <i className=\"fa fa-desktop fa-fw SSicon\"></i>\n                                </div> */}\n                                {/* <div className=\"video-mute-icon\" id=\"toggle_chat\" title=\"Chat\">\n                                    <i className=\"fas fa-comment-dots fa-fw CBicon\" ></i>\n                                    <span className=\"tag tag-danger top\" id=\"chat-tag\">&nbsp;</span>\n                                </div> */}\n                                <div className=\"video-mute-icon end-call\" title=\"End Call\">\n                                    <i className=\"fas fa-phone fa-fw CBicon\" id=\"disconnect_call\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n\n\n","/home/avinash/Downloads/Enablex/src/pages/Login.js",["44","45","46","47","48"],"import React, { useState, useEffect } from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport { createRoom as createRoomApi, joinRoom } from '../service/api.js'\nimport LoginHeader from '../components/LoginHeader'\nimport './login.css'\n\nconst Login = (props) => {\n\n    const [user, setUser] = useState({ name: '', room: '', role: '' });\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const enterRoom = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        console.log('Enter room....');\n        let joinData = {\n            name: user.name,\n            role: user.role,\n            roomId: user.room,\n            user_ref: user.name,\n        };\n\n        joinRoom(joinData)\n            .then(response => {\n                window.location = \"/room/\" + response.token;\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    const createNewRoom = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        createRoomApi()\n            .then(resp => {\n                if (resp.result === 0) {\n                    setUser({ ...user, room: resp.room.room_id });\n                    setLoading(false);\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <main>\n            <LoginHeader />\n            <div className=\"container\">\n                <div className=\"row d-flex justify-content-center align-items-center\">\n                    <div className=\"col-12 col-md-12 col-xl-6 col-lg-6 form-hedding\">\n                        <h1>1-To-1 Video Call</h1>\n                        <p>This Sample Code showcases how EnableX Video Service may be used to create a 1-to-1 Video Call\n                        Application. The Login Screen explains all basic information is needed to get a EnableX Token to get\n                        you connected to a Live Video Session. You may need to create your Access Processes to give a\n                    EnableX Token to your User.</p>\n                        <h4>Tech Specs</h4>\n                        <p>\n                            <strong>Web Toolkit: </strong > v<span id=\"version_num\">1.5</span> <br />\n                            <strong>Client Application:</strong> HTML5, CSS, JavaScript <br />\n                            <strong>Application Server:</strong> NodeJS\n                            </p>\n                    </div>\n                    <div className=\"col-12 col-md-12 col-xl-5 col-lg-5 offset-md-1\">\n                        <div className=\"form-bg login_join_div\" style={{ display: 'block', paddingBottom: '25px' }}>\n                            <h2 className=\"text-center\">Start a Video Call</h2>\n                            <div style={{ display: 'none' }} className=\"loading text-center\">Loading....</div>\n                            <form className=\"mt-4\" id=\"login_form\" onSubmit={enterRoom}>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-12\">\n                                        <input type=\"text\" className=\"form-control\" id=\"nameText\" name=\"nameText\" placeholder=\"Name\"\n                                            onChange={e => setUser({ ...user, name: e.target.value })}\n                                            value={user.name}\n                                            required />\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-md-12\">\n                                        <input type=\"text\" className=\"form-control\" id=\"roomName\" name=\"roomName\"\n                                            onChange={e => setUser({ ...user, room: e.target.value })}\n                                            value={user.room}\n                                            placeholder=\"Room ID\" required />\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-md-12\">\n                                        <select className=\"selectpicker show-menu-arrow form-control\" id=\"attendeeRole\"\n                                            onChange={e => setUser({ ...user, role: e.target.value })}\n                                            value={user.role}\n                                            name=\"attendeeRole\" required>\n                                            <option value=\"\">Select Role</option>\n                                            <option value=\"participant\">Join as Participant</option>\n                                            <option value=\"moderator\">Join as Moderator</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-md-12\">\n                                        <input type=\"checkbox\" name=\"agree\" style={{ height: '15px', width: '15px' }} defaultChecked required />\n                                        <label>I\n                                    agree to <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.enablex.io/legals/tou/\">Terms of\n                                        Use</a> and\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\"\n                                                href=\"https://www.enablex.io/legals/privacy-policy/\">Privacy Policy</a>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"form-row justify-content-start\">\n                                    <div className=\"form-group col-12 checkbox-sec\">\n                                        <div>\n                                            <div>\n                                                {/* <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary\" id=\"joinRoom\" /> */}\n\n                                                <button className=\"btn btn-primary\" id=\"joinRoom\">\n                                                    {loading ? 'Wait...' : 'Sign In'}\n                                                </button>\n\n                                            </div>\n                                            <div id=\"create_room_div\">\n                                                <hr />\n                                                <p className=\"text-center\">\n                                                    Don't have a Room-ID?\n                                                        <a href=\"#\" onClick={createNewRoom} id=\"create_room\">\n                                                        {loading ? 'Wait...' : 'Create One'}\n\n                                                    </a>\n                                                </p>\n                                            </div>\n                                            <br />\n                                            <span id=\"message\" style={{ color: 'red' }}></span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6\">\n                            <ul className=\"footerUl\">\n                                <li><a href=\"https://www.enablex.io/legals/tou/\">Terms</a></li>\n                                <li><a href=\"https://www.enablex.io/legals/privacy-policy/\">Privacy Policy</a></li>\n                            </ul>\n                        </div>\n                        <div className=\"col-12 col-md-6\">\n                            <p className=\"footer-p\">Copyright © VCLOUDX PTE LTD. All rights reserved.</p>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </main>\n    )\n}\n\nexport default Login\n","/home/avinash/Downloads/Enablex/src/service/api.js",[],"/home/avinash/Downloads/Enablex/src/components/LoginHeader.js",["49"],"import React from 'react'\n\nexport default function LoginHeader() {\n    return (\n        <header>\n            <div className=\"container\">\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\n                    <a className=\"navbar-brand\" href=\"https://www.enablex.io/\">\n                        <img src=\"./enableX_logo.png\" alt=\"EnableX\" />\n                    </a>\n                    <div className=\"navbar-collapse collapse nav justify-content-end\">\n                        <ul className=\"nav justify-content-end ton-hedr-nav\">\n                            <li className=\"nav-item\">\n                                <a href=\"#\" className=\"nav-link login text-dark\">Sample Code <span className='fa fa-code'></span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        </header>\n    )\n}",{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"54","line":35,"column":9,"nodeType":"52","messageId":"53","endLine":35,"endColumn":15},{"ruleId":"50","severity":1,"message":"55","line":36,"column":9,"nodeType":"52","messageId":"53","endLine":36,"endColumn":15},{"ruleId":"50","severity":1,"message":"56","line":37,"column":9,"nodeType":"52","messageId":"53","endLine":37,"endColumn":15},{"ruleId":"50","severity":1,"message":"57","line":38,"column":9,"nodeType":"52","messageId":"53","endLine":38,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":80,"column":8,"nodeType":"60","endLine":80,"endColumn":10,"suggestions":"61"},{"ruleId":"50","severity":1,"message":"62","line":110,"column":17,"nodeType":"52","messageId":"53","endLine":110,"endColumn":28},{"ruleId":"50","severity":1,"message":"63","line":141,"column":45,"nodeType":"52","messageId":"53","endLine":141,"endColumn":56},{"ruleId":"64","severity":1,"message":"65","line":205,"column":48,"nodeType":"66","messageId":"67","endLine":205,"endColumn":50},{"ruleId":"50","severity":1,"message":"68","line":222,"column":25,"nodeType":"52","messageId":"53","endLine":222,"endColumn":38},{"ruleId":"50","severity":1,"message":"69","line":223,"column":25,"nodeType":"52","messageId":"53","endLine":223,"endColumn":44},{"ruleId":"50","severity":1,"message":"70","line":1,"column":27,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"50","severity":1,"message":"71","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":18},{"ruleId":"50","severity":1,"message":"72","line":10,"column":12,"nodeType":"52","messageId":"53","endLine":10,"endColumn":17},{"ruleId":"50","severity":1,"message":"73","line":10,"column":19,"nodeType":"52","messageId":"53","endLine":10,"endColumn":27},{"ruleId":"74","severity":1,"message":"75","line":123,"column":57,"nodeType":"76","endLine":123,"endColumn":110},{"ruleId":"74","severity":1,"message":"75","line":14,"column":33,"nodeType":"76","endLine":14,"endColumn":82},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'sAMute' is assigned a value but never used.","'sVMute' is assigned a value but never used.","'rAmute' is assigned a value but never used.","'rVMute' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'joinRoom'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'isModerator' is assigned a value but never used.","'remote_view' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'canvasStarted' is assigned a value but never used.","'presentationStarted' is assigned a value but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"78","fix":"79"},"Update the dependencies array to be: [joinRoom]",{"range":"80","text":"81"},[1928,1930],"[joinRoom]"]